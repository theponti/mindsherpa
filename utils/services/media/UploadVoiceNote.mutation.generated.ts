/** THIS FILE IS AUTOGENERATED, DO NOT EDIT IT! */
import * as Types from '../../types';

import gql from 'graphql-tag';
import * as Urql from 'urql';
export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
export type UploadVoiceNoteMutationVariables = Types.Exact<{
  audioFile: Types.Scalars['Upload']['input'];
}>;


export type UploadVoiceNoteMutation = { readonly __typename?: 'Mutation', readonly uploadVoiceNote: { readonly __typename?: 'UploadVoiceNoteResponse', readonly text: string | null } };


export const UploadVoiceNoteDocument = gql`
    mutation UploadVoiceNote($audioFile: Upload!) {
  uploadVoiceNote(audioFile: $audioFile) {
    text
  }
}
    `;

export function useUploadVoiceNoteMutation() {
  return Urql.useMutation<UploadVoiceNoteMutation, UploadVoiceNoteMutationVariables>(UploadVoiceNoteDocument);
};